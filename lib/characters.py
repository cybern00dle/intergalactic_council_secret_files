from lib.character import Character
#это файл для создания персонажей. каждый персонаж является классом, который наследован от класса Character(то есть все функции оттуда, кроме __init__)
class The_lost_child(Character):
    def __init__(self):
        super().__init__()
        self.name = ''
        self.picture = ''
        self.hello = ''
        self.goodbye = '' 
        self.good_end = ''
        self.trigger_good_end = ''
        self.bad_end = ''
        self.trigger_bad_end = '' 
        self.death = ''
        self.trigger_death = ''
        self.neutral_end = ''
        self.trigger_neutral_end = '' 
        self.question = ''
        self.close_to_end_coef = '' 
        self.have_we_met_before = ''
        self.level = ''

class Predatory_plant(Character):
    def __init__(self):
        super().__init__()
        self.name = ''
        self.picture = ''
        self.hello = ''
        self.goodbye = '' 
        self.good_end = ''
        self.trigger_good_end = ''
        self.bad_end = ''
        self.trigger_bad_end = '' 
        self.death = ''
        self.trigger_death = ''
        self.neutral_end = ''
        self.trigger_neutral_end = '' 
        self.question = ''
        self.close_to_end_coef = '' 
        self.have_we_met_before = ''
        self.level = ''

class Wicket(Character):
    def __init__(self):
        super().__init__()
        self.name = ''
        self.picture = ''
        self.hello = ''
        self.goodbye = '' 
        self.good_end = ''
        self.trigger_good_end = ''
        self.bad_end = ''
        self.trigger_bad_end = '' 
        self.death = ''
        self.trigger_death = ''
        self.neutral_end = ''
        self.trigger_neutral_end = '' 
        self.question = ''
        self.close_to_end_coef = '' 
        self.have_we_met_before = ''
        self.level = ''

class Talking_pie(Character):
    def __init__(self):
        super().__init__()
        self.name = ''
        self.picture = ''
        self.hello = ''
        self.goodbye = '' 
        self.good_end = ''
        self.trigger_good_end = ''
        self.bad_end = ''
        self.trigger_bad_end = '' 
        self.death = ''
        self.trigger_death = ''
        self.neutral_end = ''
        self.trigger_neutral_end = '' 
        self.question = ''
        self.close_to_end_coef = '' 
        self.have_we_met_before = ''
        self.level = ''

class The_clone(Character):
    def __init__(self):
        super().__init__()
        self.name = ''
        self.picture = ''
        self.hello = ''
        self.goodbye = '' 
        self.good_end = ''
        self.trigger_good_end = ''
        self.bad_end = ''
        self.trigger_bad_end = '' 
        self.death = ''
        self.trigger_death = ''
        self.neutral_end = ''
        self.trigger_neutral_end = '' 
        self.question = ''
        self.close_to_end_coef = '' 
        self.have_we_met_before = ''
        self.level = ''

class FGN_student(Character):
    def __init__(self):
        super().__init__()
        self.name = 'Студентка ФГН'
        self.picture = ''
        self.hello = '''хей!
        Девушка, сидящая на скамейке, машет Вам рукой.
        Вы решаете, что она может быть Вам полезна, и садитесь рядом.
        '''
        self.goodbye = 'до связи!'
        self.good_end = '''
        Девушка многозначительно улыбается.
        Студентка ФГН: хороший выбор. Мне нравится, что мы друг друга понимаем.
        Студентка ФГН: спасибо за помощь, правда. Я бы так и сидела, наверно. Лови.
        Вы хватаете в воздухе купон на бесплатную шаурму с фалафелем.
        
        Немного подумав, Вы решаете спросить о Белой Вороне.
        Студентка говорит, что знает только ФиЛин, но потом добавляет, что птицы держатся рядом.
        '''
        self.trigger_good_end = '1'
        self.bad_end = '''
        Студентка понимающе кивает.
        Студентка ФГН: есть такое... Чёрт, я на пару опаздываю! И сама просидела, и тебя задержала, и так ничего и не выбрала. Ладно, спасибо.
        '''
        self.trigger_bad_end = '4'
        self.death = '''
        Студентка ФГН: чего?!
        Томик прилетает Вам прямо в висок. Всё.
        '''
        self.trigger_death = '3'
        self.neutral_end = '''
        Студентка хмыкает.
        Студентка ФГН: если так подумать, не особо отличается от альтернативного варианта. Спасибо за помощь!
        '''
        self.trigger_neutral_end = '2'
        self.question = '''Студентка ФГН: слушай, ты выглядишь как человек понимающий. 
        Вы вопросительно поднимаете бровь.
        Студентка ФГН: Ну, знаешь, у тебя вайбы dark academia. И этот шоппер хорошо дополняет образ.
        Девушка кивает в сторону Бездонного Хранилища.
        Студентка ФГН: у меня как раз проблема с шопперами. Не могу выбрать новый, рассматриваю их уже битый час. Принятие решений - не моя сильная сторона.
        Студентка ФГН: что думаешь? Girl in red или HSE?
        1. girl in red
        2. HSE
        3. рюкзак
        4. сказать, что тоже не знаете'''
        self.close_to_end_coef = ''
        self.have_we_met_before = ''
        self.level = ''

class Booklets(Character):
    def __init__(self):
        super().__init__()
        self.name = 'Буклеты'
        self.picture = ''
        self.hello = '''ну это просто невозможно!!!
        Вы наблюдаете странную картину. Перед Вами ожесточённо спорят два оживших буклета ОП "Фундаментальная и прикладная лингвистика".
        Синий буклет: посмотри на себя! Какие-то прямоугольники! Жалкое зрелище!
        Фиолетовый буклет: нет, ну знаешь что! Ты просто далёк от минимализма.
        Вы кашляете для привлечения внимания.
        Буклеты: о, привет, человек. Ты-то нам и нужен.
        '''
        self.goodbye = '*прощальное шуршание бумаги*.'
        self.good_end = '''
        Вы читаете продолжительную лекцию о том, почему оба дизайна имеют свои плюсы и минусы.
        Буклеты выглядят уставшими и заскучавшими, но убеждёнными. Они уже не настроены враждебно.
        Синий буклет: да, что-то я погорячился, брат.
        Фиолетовый буклет: да и я, старичок. Ведь не важно, что снаружи.
        Синий буклет: важно, что...
        Буклеты: ...внутри! А внутренний мир у нас общий.
        Буклеты примирительно шелестят страницами и прыгают Вам в руки, замолкая и замирая.
        Возможно, Вам это всё показалось. Надо больше спать. В любом случае, Вы получили новый артефакт.
        
        На форзаце Фиолетового буклета Вы замечаете небрежные карандашные записи. Вам удаётся разобрать только два слова: "Белая Ворона".
        '''
        self.trigger_good_end = '3'
        self.bad_end = '''
        Фиолетовый буклет торжествует. Синий буклет выглядит обиженным.
        Синий буклет: ну... Ладно, это неприятно, но я тут в меньшинстве.
        Синий буклет косится на стенд с буклетами позади Вас.
        Синий буклет: люди ничего не понимают в искусстве.
        Спор разрешён, но какой ценой?
        '''
        self.trigger_bad_end = '1'
        self.death = '''
        Синий буклет радостно смеётся, но тут же замолкает со звуком рвущейся бумаги.
        Последнее, что Вы видите - взбешенная обложка Фиолетового буклета и десятки его клонов, летящие на Вас со стенда за Вашей спиной.
        Смерть от сотен бумажных порезов наступает мгновенно.
        '''
        self.trigger_death = '2'
        self.neutral_end = '''
        Буклеты выглядят немного раздосадованными.
        Буклеты: ладно, иди, человек. Подождём ещё кого-нибудь.
        Вы разворачиваетесь, слыша, что спор продолжается.
        '''
        self.trigger_neutral_end = '4'
        self.question = '''Буклеты: у нас тут разногласия. Вот, решаем, чей дизайн лучше. Разреши спор, а?
        1. выбрать фиолетовый буклет
        2. выбрать синий буклет
        3. сказать, что оба дизайна хороши
        4. сказать, что ничего не понимаете в дизайне'''
        self.close_to_end_coef = ''
        self.have_we_met_before = ''
        self.level = ''

class Cleaner(Character):
    def __init__(self):
        super().__init__()
        self.name = 'Уборщица'
        self.picture = ''
        self.hello = '''здравствуйте.
        Бабушка со шваброй приветливо Вам улыбается.
        '''
        self.goodbye = 'до свидания.'
        self.good_end = '''
        Вы киваете, быстро поднимаетесь и берёте ведро по бокам.
        Спускаясь, Вы замечаете, что ручка ведра едва держится. Передавая ведро уборщице, Вы предупреждаете её об этом.
        Уборщица: спасибо Вам большое! Извините, что отвлекла, мне так неловко, так неловко...
        Уборщица: вот, возьмите в знак благодарности.
        Бабушка протягивает Вам маленького вязаного воронёнка.
        
        Перед тем, как уйти, Вы решаете спросить, не замечала ли она чего-то необычного в последнее время.
        Уборщица оглядывается по сторонам и загадочно говорит, что по воскресеньям перья белеют.
        '''
        self.trigger_good_end = '2'
        self.bad_end = '''
        Вы проноситесь вверх по лестнице, делая вид, что торопитесь на пару.
        Вежливая полуулыбка сходит с лица уборщицы. Её сменяет грусть.
        '''
        self.trigger_bad_end = '4'
        self.death = '''
        Вы киваете, быстро поднимаетесь и берёте ведро за ручку.
        Ручка со щелчком отрывается, ведро падает Вам на ногу, вода разливается по лестнице. Вы поскальзываетесь на первой же ступеньке сверху.
        Прокатившись кубарем вниз, Вы ударяетесь головой прямо о край ступеньки. Мир вмиг темнеет.
        '''
        self.trigger_death = '1'
        self.neutral_end = '''
        Вы окликаете студента, проходящего мимо, быстро объясняя ситуацию и делая вид, что торопитесь на пару.
        Студент соглашается и поднимается за ведром. Что-то внутри Вас заставляет сказать студенту обратить внимание на ручку ведра. 
        Уборщица благодарно смотрит вам двоим вслед.
        '''
        self.trigger_neutral_end = '3'
        self.question = '''Уборщица: мне так неловко просить, но не могли бы Вы помочь мне?
        Уборщица: там на пролёт выше стоит моё ведро, а у меня в спину вступило. Годы, мои годы...
        Уборщица: мне правда так неловко. Это же моя работа. Но не могли бы Вы подать мне ведро? Оно совсем не тяжёлое.
        1. согласиться и взять ведро за ручку
        2. согласиться и взять ведро по бокам
        3. сделать вид, что торопитесь на пару, и попросить помочь проходящего мимо студента
        4. сделать вид, что торопитесь на пару, и проигнорировать просьбу'''
        self.close_to_end_coef = ''
        self.have_we_met_before = ''
        self.level = ''
        
class Timur(Character):
    def __init__(self):
        super().__init__()
        self.name = 'Т. Мур'
        self.picture = ''
        self.hello = '''ой! Я и не заметил, как ты подошёл.
        Т. Мур: Меня все Т. Мур зовут. А тебя?
        Вы представляетесь.
        Т. Мур: приятно познакомиться!
        '''
        self.goodbye = 'удачи!'
        self.good_end = '''
        Т. Мур: самолётик? Хехе, хороший выбор!
        Вы вспоминаете, как в детстве складывали с мамой космические кораблики из каменной бумаги.
        Вы с лёгкостью сворачиваете лист в незамысловатый трансгалактический шаттл.
        Т. Мур: ого! Я... не видел таких самолётиков раньше.
        Т. Мур: слушай, не хочешь обменяться? Ты мне самолётик, а я тебе... вот.
        Т. Мур протягивает Вам бумажный кинжал с рукояткой в форме головы вороны. Вы соглашаетесь на обмен.
        
        Вы замечаете, что цифры с распечатки, из которой был сложен кинжал, складываются на клюве в "125 10:00".
        '''
        self.trigger_good_end = '2'
        self.bad_end = '''
        Т. Мур улыбается Вашему выбору.
        К сожалению, Ваших знаний о внешнем виде птиц средней полосы России недостаточно. Сложить ворону не получается.
        Вы пытаетесь исправить ситуацию. В конце концов, тонкая бумага рвётся.
        Т. Мур: эх! Ну ничего страшного.
        '''
        self.trigger_bad_end = '1'
        self.death = '''
        Вы отказываетесь, утверждая, что уже переросли возраст, когда складывать оригами было весело.
        Прежде, чем Вы успеваете осознать возможные последствия Вашего ответа, бумажный кинжал вонзается Вам в горло.
        '''
        self.trigger_death = '4'
        self.neutral_end = '''
        Вы вежливо отказываетесь.
        Т. Мур: что ж! Тогда в другой раз.
        '''
        self.trigger_neutral_end = '3'
        self.question = '''Т. Мур: слушай, я тут оригами занимаюсь, но мне одному одиноко. Не хочешь присоединиться?
        Т. Мур: только у меня всего один лист бумаги остался, так что придётся быть аккуратнее.
        1. согласиться и попробовать сложить ворону
        2. согласиться и попробовать сложить самолётик
        3. вежливо отказаться
        4. не очень вежливо отказаться'''
        self.close_to_end_coef = ''
        self.have_we_met_before = ''
        self.level = ''

class Strange_group(Character):
    def __init__(self):
        super().__init__()
        self.name = 'Безымянная группа'
        self.picture = ''
        self.hello = '''вот и ты.
        Это было сказано тихо. Скорее всего, группа не надеялась, что Вы это услышите.
        *ОПИСАНИЯ НАС ДЕВАЧЬКИ*
        '''
        self.goodbye = 'счастливого пути. И привет Совету.'
        self.good_end = '''
        Вам и правда не составляет труда объяснить группе, что да как в GitHub.
        Одна из девушек протягивает Вам тонкую книжечку "Тайны ФГН".
        
        Наспех пролистав страницы, Вы замечаете, что задача, предлагающая спеть хотя бы два куплета "Gaudeamus", жирно обведена красным.
        Девушки замечают Ваше удивление и улыбаются. Что-то Вам подсказывает, что пора повторить латынь.
        '''
        self.trigger_good_end = '1'
        self.bad_end = ''
        self.trigger_bad_end = ''
        self.death = ''
        self.trigger_death = ''
        self.neutral_end = '''
        Девушки пожимают плечами и возвращаются к изучению сайта.
        Уходя, Вы слышите два слова, брошенные Вам вслед.
        Безымянная группа: будь осторожен.
        '''
        self.trigger_neutral_end = '2'
        self.question = '''Безымянная группа: нам тут помощь нужна небольшая. Надо с GitHub разобраться, за это плюсики обещали.
        Вы думаете, что у землян-вышкинцев странная форма поощрения. Вы решаете, что "плюсики" нужны для искусственного улучшения навыков индивида. Откуда Вам знать, что не всё сделано из кода?
        Безымянная группа: всё хорошо, можешь не помогать, ты выглядишь уставшим. Но у нас такое чувство, что ты в этом много понимаешь.
        Безымянная группа: ...
        Безымянная группа: и, возможно, мы сможем помочь в ответ.
        1. согласиться
        2. не соглашаться'''
        self.close_to_end_coef = ''
        self.have_we_met_before = ''
        self.level = ''
